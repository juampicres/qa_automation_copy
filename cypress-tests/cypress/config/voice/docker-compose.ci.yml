version: '3.8'
x-app_config: &backend_config
  image: voice:backend
  environment:
    ACTION_MAILER_HOST: http://backend:3001
    ACTION_MAILER_TLD_LENGTH: 1
    REDIS_URL: redis://redis:6379/0
    REDIS_URL_SIDEKIQ: redis://redis:6379/2
    REDIS_URL_ACTIONCABLE: redis://redis:6379/1
    SIDEKIQ_URL: redis://redis:6379/1
    CABLE_URL: redis://redis:6379/2
    RAILS_ENV: cypress
    SECRET_KEY_BASE: 9e0b8c1ba5619c20d3e7869c279a22aba3ebe71a47f8921447d02b8d0f39e02001be48158d1652e4a51e60053c5a17ba91dcc804d01ecf64018f4f87c175dae8
  depends_on:
    - db
    - redis
    - kafka
services:
  backend:
    <<: *backend_config
    ports:
      - 3000:3000
    command: ['rails', 'server', '-b', '0.0.0.0', '-p', '3000']
  frontend:
    build:
      context: ../../../../../voice-frontend
      dockerfile: Dockerfile.e2e
    ports:
      - 3001:3001
    command: ['yarn', 'dev']
  sidekiq:
    <<: *backend_config
    entrypoint: ['sidekiq']
  db:
    image: postgres:11.4-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
  redis:
    image: redis:alpine
    command: ['redis-server']
  cypress:
    image: cypress:voice
    network_mode: host
    depends_on:
      - backend
      - frontend
      - sidekiq
    working_dir: /qa_automation/tests
    environment:
      - DISPLAY
    command: ['npm', 'run', 'cy:voice:ci', '--']
  zookeeper:
    image: zookeeper:3.7.0
    ports:
      - 2181:2181
    logging:
      driver: none
  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CREATE_TOPICS: 'topic_metadata:1:1'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    logging:
      driver: none
    depends_on:
      - zookeeper
